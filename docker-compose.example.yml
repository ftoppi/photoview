version: "3"

services:
  db:
    image: mariadb:10.5
    restart: always
    environment:
      - MYSQL_DATABASE=photoview
      - MYSQL_USER=photoview
      - MYSQL_PASSWORD=photosecret
      - MYSQL_RANDOM_ROOT_PASSWORD=1
    volumes:
      - db_data:/var/lib/mysql

  photoview:
    image: viktorstrate/photoview:2
    restart: always
    # Remove the following ports section if you enable Traefik reverse proxy labels
    ports:
      - "8000:80"
    depends_on:
      - db

    environment:
      - PHOTOVIEW_DATABASE_DRIVER=mysql
      - PHOTOVIEW_MYSQL_URL=photoview:photosecret@tcp(db)/photoview
      - PHOTOVIEW_LISTEN_IP=photoview
      - PHOTOVIEW_LISTEN_PORT=80
      - PHOTOVIEW_MEDIA_CACHE=/app/cache
      
      # Optional: If you are using Samba/CIFS-Share and experience problems with "directory not found"
      # Enable the following Godebug
      # - GODEBUG=asyncpreemptoff=1
      
      
      # Optional: To enable map related features, you need to create a mapbox token.
      # A token can be generated for free here https://account.mapbox.com/access-tokens/
      # It's a good idea to limit the scope of the token to your own domain, to prevent others from using it.
      # - MAPBOX_TOKEN=<YOUR TOKEN HERE>

    volumes:
      - api_cache:/app/cache

      # Change This: to the directory where your photos are located on your server.
      # If the photos are located at `/home/user/photos`, then change this value
      # to the following: `/home/user/photos:/photos:ro`.
      # You can mount multiple paths, if your photos are spread across multiple directories.
      - ./photos_path:/photos:ro

    labels:
      # Configuration for Traefik reverse proxy, assuming the following:
      # - Traefik runs in host network mode
      # - public hostname is photoview.foo.bar
      # - certificate resolver is named "le"
      # - https entrypoint is named "websecure"
      # If you enable these labels, remove the ports section
      # - "traefik.enable=true"
      # - "traefik.http.routers.photoview.rule=Host(`photoview.foo.bar`)"
      # - "traefik.http.routers.photoview.service=photoview"
      # - "traefik.http.routers.photoview.tls=true"
      # - "traefik.http.routers.photoview.tls.certresolver=le"
      # - "traefik.http.routers.photoview.entrypoints=websecure"
      # - "traefik.http.services.photoview.loadbalancer.server.port=80"
      # - "traefik.http.services.photoview.loadbalancer.server.scheme=http"

volumes:
  db_data:
  api_cache:
